function loadData() {
    $("#loadingOverlay").addClass("d-flex");
    const n = {
        a: $("#acc").val()
    };
    $.ajax({
        method: "POST",
        url: "/ufr",
        headers: {
            Authorization: "Bearer " + token
        },
        data: n
    }).done(function(n) {
        $("#loadingOverlay").removeClass("d-flex");
        lv = n.lv;
        lng = n.lng;
        texts = n.texts;
        grouptexts = n.groupTexts;
        stpe = n.setting;
        stpe.includes(6) && countOnl("online");
        lv.length > 0 && lng.length > 0 && (ready("upload-selectedLng", "upload-selectedLv"),
        ready("selectedLng", "selectedLv"),
        setupChange("upload-selectedLng", "upload-selectedLv"),
        setupChange("selectedLng", "selectedLv"),
        setupChange("user-group"));
        showFile("selectedLv")
    }).fail(function(n) {
        console.log(n);
        $("#loadingOverlay").removeClass("d-flex");
        n.status == 401 && rediLogin()
    })
}
function ready(n, t) {
    n == "selectedLng" && t == "selectedLv" && processFile()
}
function setupChange(n, t) {
    var i = $(`#${n}`);
    i.on("change", function() {
        if (n == "selectedLng" && t == "selectedLv")
            processFile();
        else if (n == "user-group") {
            var i = $('input[type="checkbox"][name="selectAll"]');
            i.prop("checked", !1);
            processFile()
        }
    })
}
function showFile(n) {
    var t = $(`#${n}`);
    t.on("change", function() {
        processFile()
    })
}
function processFile() {
    nameOfFile = "";
    var t = $("#selectedLv").val()
      , i = $("#selectedLng").val()
      , r = $(`#user-group`).val()
      , n = t == 12 ? texts.filter(n=>n.isContext == !0) : r == 0 ? texts.filter(n=>n.levelId == t && n.lngId == i && n.slug != "") : grouptexts.filter(n=>n.levelId == t && n.lngId == i && n.slug != "" && n.groupId == r);
    var u = $("#search-newest").is(":checked")
      , f = $("#search-random").is(":checked")
      , e = $("#sort").is(":checked")
      , o = $("#shortest5").is(":checked")
      , s = $("#longest5").is(":checked");
    u ? n = getNewestTexts(n) : f ? n = getRandomElements(n, 5) : o ? (n = sort(1),
    n.length > 5 && (n = getRandomElements(n, 5))) : s ? (n = sort(2),
    n.length > 5 && (n = getRandomElements(n, 5))) : e && (n = sort(0));
    createFileListHtml(n)
}
function rT(n) {
    let t = n.split(" ");
    for (var i = 0; i < t.length; i++)
        t[i] = !/[A-Z]/.exec(t[i][0]) ? t[i] : "<bb>" + t[i] + "<\/bb>";
    return t.join(" ")
}
function createFileListHtml(n) {
    var b, f, w, s, u, r, e, t, h, c, i, l, o, a, v, y, p;
    for (tempList = [...n],
    $("#totalFile").text(`${n.length} Files`),
    b = document.getElementById("fileList"),
    b.innerHTML = "",
    f = 0; f < n.length; f++)
        f % 3 == 0 && (w = document.createElement("div"),
        w.className = "row",
        b.appendChild(w)),
        s = document.createElement("div"),
        s.className = "col",
        u = document.createElement("div"),
        u.className = "align-self-center dflex-col",
        r = document.createElement("input"),
        r.type = "checkbox",
        r.className = "w-h-21 wh21",
        r.name = "select-for-replay",
        e = document.createElement("div"),
        e.className = "div-file-text",
        t = n[f],
        e.id = t.slug,
        r.id = `${t.slug}.mp3`,
        r.setAttribute("dtid", t.id),
        r.setAttribute("dtIndex", t.index),
        t.isShare == !1 ? (stpe.includes(5) && (i = document.createElement("img"),
        i.className = "mgc",
        i.src = t.hasFlash ? "/images/yes-flashcard.png" : "/images/no-flashcard.png",
        u.appendChild(i),
        function(n) {
            var t = $("#acc").val();
            i.onclick = function() {
                rediSelectFlash(t, n.index, 0)
            }
        }(t),
        h = document.createElement("img"),
        h.className = "mgc mcloud",
        h.src = "/images/cloud-folder.png",
        u.appendChild(h),
        function(n) {
            var t = $("#acc").val();
            h.onclick = function() {
                rediCloud(t, n.id)
            }
        }(t)),
        stpe.includes(4) && (c = document.createElement("img"),
        c.className = "mgc",
        c.src = t.isConfig ? "/images/yes-config.png" : "/images/no-config.png",
        u.appendChild(c),
        function(n) {
            c.onclick = function() {
                audio.removeEventListener("ended", randomSelectedAudio);
                rediTestConfig(n.id, $("#acc").val())
            }
        }(t))) : t.hasFlash && (i = document.createElement("img"),
        i.className = "mgc",
        i.src = "/images/yes-flashcard.png",
        u.appendChild(i),
        function(n) {
            var t = $("#acc").val();
            i.onclick = function() {
                rediSelectFlash(t, n.index, 0)
            }
        }(t)),
        l = document.createElement("p"),
        l.className = "fiP",
        l.innerHTML = `${f + 1}. ${rT(t.textValue)}`,
        e.appendChild(l),
        o = document.createElement("div"),
        o.className = "div-action",
        a = document.createElement("div"),
        a.className = "divGroup",
        t.isShare == !1 && (v = document.createElement("img"),
        v.className = "imgAction mgl",
        v.src = "/images/cancel.png",
        y = document.createElement("img"),
        y.className = "imgAction mgr",
        y.src = "/images/write.png",
        o.appendChild(v),
        o.appendChild(y),
        function(n) {
            v.onclick = function() {
                audio.removeEventListener("ended", randomSelectedAudio);
                nameOfFile = n.slug;
                showModal("deleteModal", n)
            }
        }(t),
        function(n) {
            y.onclick = function() {
                audio.removeEventListener("ended", randomSelectedAudio);
                nameOfFile = n.slug;
                showModal("updateModal", n)
            }
        }(t),
        p = document.createElement("img"),
        p.className = "mgc",
        p.src = "/images/group.png",
        function(n) {
            p.onclick = function() {
                toggleModal("shareGroup");
                fidToShare = n.index
            }
        }(t),
        a.appendChild(p)),
        a.appendChild(r),
        o.appendChild(a),
        e.appendChild(o),
        r.onchange = function() {
            var n = $(".wh21").length === $(".wh21:checked").length
              , t = $('input[type="checkbox"].w-h-24[name="selectAll"]');
            t.prop("checked", n);
            audio.removeEventListener("ended", randomSelectedAudio)
        }
        ,
        s.appendChild(u),
        s.appendChild(e),
        function(n) {
            l.onclick = function() {
                audio.removeEventListener("ended", randomSelectedAudio);
                nameOfFile = n.slug;
                var t = $(".div-file-text");
                t.each(function() {
                    var n = $(this).attr("id");
                    n == nameOfFile ? $(this).addClass("div-file-text-speaking") : $(this).removeClass("div-file-text-speaking")
                });
                playAudio(n.fullSlug);
                showText();
                showNote();
                showNote2()
            }
        }(t),
        w.appendChild(s)
}
function playAudio(n) {
    audio.src = n;
    audio.play()
}
function randomSelectedAudio() {
    var n = [], i;
    if ($(".wh21:checked").each(function() {
        n.push($(this).attr("id"))
    }),
    n.length > 0) {
        var r = Math.floor(Math.random() * n.length)
          , u = n[r]
          , t = texts.findIndex(n=>n.fullSlug.includes(u));
        nameOfFile = texts[t].slug;
        i = $(".div-file-text");
        i.each(function() {
            var n = $(this).attr("id");
            n.includes(nameOfFile) ? $(this).addClass("div-file-text-speaking") : $(this).removeClass("div-file-text-speaking")
        });
        showText();
        showNote();
        showNote2();
        playAudio(texts[t].fullSlug)
    }
}
function set_Temp_Height_For_Float_Div_Not_Override_Content() {
    var n = $(".float-div-text").height();
    $("#tempHeight").attr("style", `height: ${n}px`)
}
function showText() {
    var n = $("#dc2"), t;
    nameOfFile != "" ? (t = tempList.find(n=>n.slug == nameOfFile)?.textValue,
    t && ($('input[name="showText"]').is(":checked") ? (n.attr("style", "display: inline-block; margin: 10px 0px;"),
    $("#text-label").text(t),
    $("#imgSpeaker").attr("style", "display: inline-block;")) : (n.attr("style", "display: none;"),
    $("#text-label").text(""),
    $("#imgSpeaker").attr("style", "display: none;")))) : (n.attr("style", "display: none;"),
    $("#text-label").text(""),
    $("#imgSpeaker").attr("style", "display: none;"));
    set_Temp_Height_For_Float_Div_Not_Override_Content()
}
function showNote() {
    if (nameOfFile != "") {
        var n = tempList.find(n=>n.slug == nameOfFile)?.note;
        n ? $('input[name="showNote"]').is(":checked") ? (showDivNoteLabel(1, !0),
        $("#note-label").text(n)) : (showDivNoteLabel(1, !1),
        $("#note-label").text("")) : (showDivNoteLabel(1, !1),
        $("#note-label").text(""))
    } else
        showDivNoteLabel(1, !1),
        $("#note-label").text("");
    set_Temp_Height_For_Float_Div_Not_Override_Content()
}
function showNote2() {
    if (nameOfFile != "") {
        var n = texts.find(n=>n.slug == nameOfFile)?.note2;
        n ? $('input[name="showNote2"]').is(":checked") ? (showDivNoteLabel(2, !0),
        $("#note-label-2").text(n)) : (showDivNoteLabel(2, !1),
        $("#note-label-2").text("")) : (showDivNoteLabel(2, !1),
        $("#note-label-2").text(""))
    } else
        showDivNoteLabel(2, !1),
        $("#note-label-2").text("");
    set_Temp_Height_For_Float_Div_Not_Override_Content()
}
function showDivNoteLabel(n, t) {
    var i = $(`#div-note-label-${n}`);
    t ? i.show() : i.hide()
}
function readTheContent() {
    audio.pause();
    audio.play()
}
function logout() {
    $("#btnLogout").prop("disabled", !0);
    $.ajax({
        url: "/user-file-logout",
        type: "POST",
        success: function() {
            $("#btnLogout").prop("disabled", !1);
            rediLogin()
        },
        error: function(n) {
            console.log(n);
            setTimeout(function() {
                $("#btnLogin").prop("disabled", !1)
            }, 3e3)
        }
    })
}
function createText() {
    var n = $("#text").val().trim()
      , t = $("#note").val().trim()
      , i = $("#note2").val().trim()
      , r = $("#upload-selectedLng").val()
      , u = $("#upload-selectedLv").val();
    if ($("#create-noti").text(""),
    n == "") {
        $("#create-noti").text("Text to upload is empty!").attr("style", "color: red !important;");
        return
    }
    if (t == "") {
        $("#create-noti").text("Note is empty!").attr("style", "color: red !important;");
        return
    }
    $("#btnCreateText").prop("disabled", !0);
    const f = {
        text: n,
        note: t,
        lngId: r,
        levelId: u,
        note2: i
    };
    $("#loadingOverlay").addClass("d-flex");
    $.ajax({
        method: "POST",
        url: "/create-text",
        headers: {
            Authorization: "Bearer " + token
        },
        data: f
    }).done(function(n) {
        $("#loadingOverlay").removeClass("d-flex");
        texts = n.texts;
        processFile();
        $("#create-noti").text("Created!").attr("style", "color: blue !important;");
        $("#btnCreateText").prop("disabled", !1);
        $("#text").val("");
        $("#note").val("");
        $("#note2").val("")
    }).fail(function(n) {
        console.log(n);
        $("#loadingOverlay").removeClass("d-flex");
        n.status == 401 && rediLogin();
        $("#create-noti").text(n.responseJSON).attr("style", "color: red !important;");
        setTimeout(function() {
            $("#create-noti").text("");
            $("#btnCreateText").prop("disabled", !1)
        }, 3e3)
    })
}
function selectAll(n) {
    $(".wh21").prop("checked", n.checked);
    audio.removeEventListener("ended", randomSelectedAudio)
}
function expand() {
    isExpanded = !isExpanded;
    var n = $("#fileUploadDiv")
      , t = n.prop("scrollHeight");
    isExpanded ? (n.animate({
        "max-height": t
    }, 500),
    $("#expand-action").attr("src", "/images/reduce.png")) : (n.css("max-height", t),
    n.animate({
        "max-height": 0
    }, 500),
    $("#expand-action").attr("src", "/images/expand.png"))
}
function handleDebouncedSearch() {
    clearTimeout(searchTimer);
    searchTimer = setTimeout(()=>{
        const n = $("#search").val().trim();
        performSearch(n)
    }
    , 1e3)
}
function performSearch(n) {
    var e = n.toLowerCase(), o = [], s = $("#selectedLv").val(), v = $("#selectedLng").val(), y = $(`#user-group`).val(), h = [], r, f, t, i, p;
    for (h = s == 12 ? texts.filter(n=>n.isContext == !0) : y == 0 ? texts.filter(n=>n.levelId == s && n.lngId == v && n.slug != "") : grouptexts.filter(n=>n.levelId == s && n.lngId == v && n.slug != "" && n.groupId == y),
    r = e.split(" "),
    f = 0; f < h.length; f++) {
        var c = h[f]
          , l = c.textValue.toLowerCase()
          , a = c.note.toLowerCase()
          , u = 0
          , w = l.split(" ")
          , b = a.split(" ");
        for (t = 0; t < r.length; t++)
            i = r[t],
            (w.includes(i) || b.includes(i)) && (u += 3);
        for ((l.includes(e) || a.includes(e)) && (u += 2),
        t = 0; t < r.length; t++)
            i = r[t],
            (l.includes(i) || a.includes(i)) && (u += 1);
        u > 0 && o.push({
            item: c,
            matchScore: u
        })
    }
    o.sort(function(n, t) {
        return t.matchScore - n.matchScore
    });
    p = o.map(function(n) {
        return n.item
    });
    processFileWhenSearch(p)
}
function processFileWhenSearch(n) {
    nameOfFile = "";
    var t = $("#search-newest").is(":checked")
      , i = $("#search-random").is(":checked");
    t ? n = getNewestTexts(n) : i && (n = getRandomElements(n, 5));
    createFileListHtml(n)
}
function deleteText() {
    nameOfFile = "";
    const n = {
        id: actionData.id
    };
    $("#btnDelete").prop("disabled", !0);
    $("#notifyDelete").text("");
    $("#loadingOverlay").addClass("d-flex");
    $.ajax({
        method: "POST",
        url: "/delete-text",
        headers: {
            Authorization: "Bearer " + token
        },
        data: n
    }).done(function() {
        closeModal("deleteModal");
        $("#btnDelete").prop("disabled", !1);
        $("#loadingOverlay").removeClass("d-flex");
        texts = texts.filter(n=>n.index != actionData.index);
        grouptexts = grouptexts.filter(n=>n.index != actionData.index);
        processFile();
        showText();
        showNote();
        showNote2()
    }).fail(function(n) {
        $("#loadingOverlay").removeClass("d-flex");
        n.status == 401 && rediLogin();
        console.log(n);
        $("#notifyDelete").text(n.responseJSON).attr("style", "color: red !important;");
        setTimeout(function() {
            $("#notifyDelete").text("");
            $("#btnDelete").prop("disabled", !1)
        }, 3e3)
    })
}
function setupUpdate(n) {
    $("#updateTextContent").val(n.textValue);
    $("#updateNote1").val(n.note);
    $("#updateNote2").val(n.note2)
}
function updateText() {
    nameOfFile = "";
    const n = $("#updateTextContent").val().trim()
      , t = $("#updateNote1").val().trim()
      , i = $("#updateNote2").val().trim()
      , r = actionData.id
      , u = actionData.levelId
      , f = actionData.lngId
      , e = actionData.slug;
    if ($("#notifyUpdate").text(""),
    n == "") {
        $("#notifyUpdate").text("Text to upload is empty!").attr("style", "color: red !important;");
        return
    }
    if (t == "") {
        $("#notifyUpdate").text("Note is empty!").attr("style", "color: red !important;");
        return
    }
    $("#btnUpdate").prop("disabled", !0);
    const o = {
        id: r,
        text: n,
        note: t,
        note2: i,
        lngId: f,
        levelId: u,
        slug: e
    };
    $("#loadingOverlay").addClass("d-flex");
    $.ajax({
        method: "POST",
        url: "/update-text",
        headers: {
            Authorization: "Bearer " + token
        },
        data: o
    }).done(function(n) {
        $("#loadingOverlay").removeClass("d-flex");
        $("#notifyUpdate").text("Updated!").attr("style", "color: blue !important;");
        $("#btnUpdate").prop("disabled", !1);
        texts = n.texts;
        grouptexts = n.groupTexts;
        processFile();
        showText();
        showNote();
        showNote2()
    }).fail(function(n) {
        $("#loadingOverlay").removeClass("d-flex");
        n.status == 401 && rediLogin();
        console.log(n);
        $("#notifyUpdate").text(n.responseJSON).attr("style", "color: red !important;");
        setTimeout(function() {
            $("#notifyUpdate").text("");
            $("#btnUpdate").prop("disabled", !1)
        }, 3e3)
    })
}
function closeModal(n) {
    var t = $(`#${n}`);
    t.attr("style", "display: none;")
}
function showModal(n, t) {
    $(`#${n}`).attr("style", "display: block;");
    actionData = t;
    n == "deleteModal" ? $("#actionDelHeader").text(`Delete ${t.textValue}`) : ($("#actionUpdateHeader").text(`Update`),
    setupUpdate(t))
}
function scrollToTop() {
    window.scrollTo({
        top: 0,
        behavior: "smooth"
    })
}
function scrollToBottom() {
    window.scrollTo({
        top: document.body.scrollHeight,
        behavior: "smooth"
    })
}
function getNewestTexts(n) {
    var t = n.sort(function(n, t) {
        return new Date(t.createdDate) - new Date(n.createdDate)
    })
      , i = [];
    for (let n = 0; n < 5 && n < t.length; n++)
        i.push(t[n]);
    return i
}
function NoR(n) {
    $("#sort").prop("checked", !1);
    $("#shortest5").prop("checked", !1);
    $("#longest5").prop("checked", !1);
    $(`#${n}`).prop("checked", !1);
    const t = $("#search").val().trim();
    t.length == 0 ? processFile() : handleDebouncedSearch()
}
function shortlong(n, t, i) {
    if ($("#sort").prop("checked", !1),
    $("#search-newest").prop("checked", !1),
    $("#search-random").prop("checked", !1),
    $(`#${n}`).prop("checked", !1),
    i.checked) {
        var r = sort(t);
        r.length < 5 ? createFileListHtml(r) : (r = getRandomElements(r, 5),
        createFileListHtml(r))
    } else
        processFile()
}
function testing(n) {
    var r, e, c, o, s, f, h, i;
    nameOfFile = "";
    var y = $("#selectedLv").val()
      , p = $("#selectedLng").val()
      , t = [];
    if (t = y == 12 ? [...tempList].filter(n=>n.isContext == !0) : [...tempList].filter(n=>n.levelId == y && n.lngId == p),
    r = $("#search").val().trim(),
    r.length > 0) {
        for (e = [],
        c = r.split(" "),
        o = 0; o < t.length; o++) {
            var l = t[o]
              , a = l.textValue.toLowerCase()
              , v = l.note.toLowerCase()
              , u = 0
              , w = a.split(" ")
              , b = v.split(" ");
            for (s = 0; s < c.length; s++)
                f = c[s],
                (w.includes(f) || b.includes(f)) && (u += 3),
                (a.includes(f) || v.includes(f)) && (u += 1);
            (a.includes(r) || v.includes(r)) && (u += 2);
            u > 0 && e.push({
                item: l,
                matchScore: u
            })
        }
        e.sort(function(n, t) {
            return t.matchScore - n.matchScore
        });
        t = e.map(function(n) {
            return n.item
        })
    }
    h = [];
    $(".wh21:checked").each(function() {
        h.push($(this).attr("id"))
    });
    i = getRandomElements(t, 5);
    h.length < 5 ? createListForTest(i, n) : (i = t.filter(n=>h.some(t=>t === `${n.slug}.mp3`)),
    i = getRandomElements(i, 5),
    createListForTest(i, n))
}
function getLongestWord(n) {
    let t = "";
    for (let i = 0; i < n.length; i++) {
        const r = n[i];
        r.length > t.length && (t = r)
    }
    return t
}
function createListForTest(n, t) {
    var h, i, o, f, s, r, u, c, e;
    for (tempList = [...n],
    $("#totalFile").text(`${n.length} Files`),
    h = document.getElementById("fileList"),
    h.innerHTML = "",
    i = 0; i < n.length; i++)
        i % 3 == 0 && (o = document.createElement("div"),
        o.className = "row",
        h.appendChild(o)),
        f = document.createElement("div"),
        f.className = "col",
        s = document.createElement("div"),
        s.className = "align-self-center",
        r = document.createElement("input"),
        r.type = "checkbox",
        r.className = "w-h-21 wh21",
        r.name = "select-for-replay",
        s.appendChild(r),
        u = document.createElement("div"),
        u.className = "div-file-text",
        c = n[i].slug,
        u.id = c,
        r.id = `${c}.mp3`,
        e = n[i],
        u.innerHTML = t == "listen" ? `${i + 1}` : `${i + 1}. ${e.note}`,
        r.setAttribute("dtid", e.id),
        r.setAttribute("dtIndex", e.index),
        r.onchange = function() {
            var n = $(".wh21").length === $(".wh21:checked").length
              , t = $('input[type="checkbox"].w-h-24[name="selectAll"]');
            t.prop("checked", n);
            audio.removeEventListener("ended", randomSelectedAudio)
        }
        ,
        f.appendChild(s),
        f.appendChild(u),
        function(n, t, i) {
            let r = 1;
            u.onclick = function() {
                var u, f, e;
                if (audio.removeEventListener("ended", randomSelectedAudio),
                i == "listen")
                    switch (r) {
                    case 1:
                        break;
                    case 2:
                        u = t.textValue.split(" ");
                        f = getLongestWord(u);
                        this.innerHTML = `${n + 1}. ${f}`;
                        break;
                    case 3:
                        this.innerHTML = `${n + 1}. ${t.textValue}`;
                        break;
                    default:
                        this.innerHTML = `${n + 1}`;
                        r = 1
                    }
                else {
                    u = t.textValue.split(" ");
                    switch (r) {
                    case 1:
                        f = getLongestWord(u);
                        this.innerHTML = `${n + 1}. ${f}`;
                        break;
                    case 2:
                        if (u.length < 1)
                            break;
                        this.innerHTML = u.length > 1 ? `${n + 1}.${u[u.length - 2]} ${u[u.length - 1]}` : `${n + 1}.${u[u.length - 1]}`;
                        break;
                    case 3:
                        this.innerHTML = `${n + 1}.${t.textValue}`;
                        break;
                    default:
                        this.innerHTML = `${n + 1}.${t.note}`;
                        r = 0
                    }
                }
                r += 1;
                nameOfFile = t.slug;
                e = $(".div-file-text");
                e.each(function() {
                    var n = $(this).attr("id");
                    n == nameOfFile ? $(this).addClass("div-file-text-speaking") : $(this).removeClass("div-file-text-speaking")
                });
                playAudio(t.fullSlug);
                showText();
                showNote();
                showNote2()
            }
        }(i, e, t),
        o.appendChild(f)
}
function getRandomElements(n, t) {
    var i = [...n], u = [], r = i.length, e, f;
    if (r <= t)
        return i;
    while (r > 0 && u.length < t)
        f = Math.floor(Math.random() * r),
        r--,
        e = i[r],
        i[r] = i[f],
        i[f] = e,
        u.includes(i[r]) || u.push(i[r]);
    return u
}
function replaceString(n) {
    return n.replaceAll("?", "").replaceAll('"', "").replaceAll("{", "").replaceAll("}", "").replaceAll("[", "").replaceAll("]", "").replaceAll("!", "").replaceAll("(", "").replaceAll(")", "").replaceAll(".", "").replaceAll(",", "").replaceAll(";", "").replaceAll(":", "").replaceAll(/\s\s+/g, " ").replaceAll("\n", " ")
}
function allShortToLong(n) {
    $("#search-random").prop("checked", !1);
    $("#search-newest").prop("checked", !1);
    $("#shortest5").prop("checked", !1);
    $("#longest5").prop("checked", !1);
    var t = sort(0);
    n.checked ? createFileListHtml(t) : processFile()
}
function sort(n) {
    var i = $("#selectedLv").val(), u = $("#selectedLng").val(), t = [], r;
    return i == 12 ? t = [...texts].filter(n=>n.isContext == !0) : (r = $(`#user-group`).val(),
    t = r == 0 ? [...texts].filter(n=>n.levelId == i && n.lngId == u) : [...grouptexts].filter(n=>n.levelId == i && n.lngId == u && n.slug != "" && n.groupId == r)),
    n == 0 ? (currIndex = 0,
    t = t.sort(function(n, t) {
        var i = replaceString(n.textValue).split(" ").length
          , r = replaceString(t.textValue).split(" ").length;
        return i < r ? -1 : i < r ? 1 : 0
    })) : t = n == 1 ? t.filter(n=>replaceString(n.textValue).split(" ").length < 8) : t.filter(n=>replaceString(n.textValue).split(" ").length > 7),
    t
}
function toggleRepeat(n, t) {
    repeatInterval && clearInterval(repeatInterval);
    $("#au-reSentence").prop("checked", !1);
    $("#rSentence").prop("checked", !1);
    n == 1 ? $("#repeatSpeak").prop("checked", !1) : $("#repeatText").prop("checked", !1);
    t.checked && (repeatInterval = setInterval(function() {
        n == 1 ? repeatText() : rSpeak(!0)
    }, 2e3))
}
function repeatText() {
    var i = $("#selectedLv").val(), f = $("#selectedLng").val(), n = [], r, u, t;
    if (n = i == 12 ? [...tempList].filter(n=>n.isContext == !0) : [...tempList].filter(n=>n.levelId == i && n.lngId == f),
    n.length > 0 && !responsiveVoice.isPlaying()) {
        r = $("#sort").is(":checked");
        r ? (currText = n[currIndex],
        currIndex < n.length - 1 ? currIndex += 1 : currIndex = 0) : (n = getRandomElements(n, 1),
        currText = n[0]);
        u = currText.textValue.replaceAll('"', "").replaceAll("{", "").replaceAll("}", "").replaceAll("[", "").replaceAll("]", "").replaceAll(";", "").replaceAll("-", "").replaceAll("?", "").replaceAll("!", "").replaceAll(/\s\s+/g, " ").replaceAll("\n", " ").split(" ");
        t = getRandomElements(u, 1);
        /^[0-9]/.test(t[0]) || (t[0] = t[0].replaceAll(".", "").replaceAll(":", "").replaceAll(",", ""));
        const i = document.getElementById("rText")
          , f = i.parentElement
          , e = f.offsetWidth
          , o = e / 100;
        i.style.fontSize = `calc(12px + (${o}px * 20) - ${t[0].length * 3}px)`;
        i.innerHTML = t[0];
        shRepText(!1)
    }
}
function rSpeak(n) {
    var n, i, t, r, u;
    responsiveVoice.isPlaying() || (n == !0 && repeatText(),
    n = $("#rText").text(),
    n.trim().length > 0 && (i = $("#selectedLng").val(),
    t = lng.find(n=>n.id == i),
    t && (r = t.language,
    u = setupVoice(r),
    responsiveVoice.speak(n, u))))
}
function shRepText(n) {
    var i, t, u;
    if (currText)
        if (i = $("#frt").position().top,
        $("#sfrt").attr("style", `bottom: calc(100vh - ${i}px)`),
        t = $("#dc1"),
        n == !0 && (sfrt = !sfrt),
        sfrt) {
            $("#sfrt").removeClass("d-none");
            t.attr("style", "display: inline-block; margin: 10px 0px;");
            var r = $("#rText").text()
              , f = currText.textValue.replace(r, `<span style="color: black;">${"_".repeat(r.length)}</span>`)
              , e = currText.note;
            $("#rTextLabel").html(f);
            $("#rNoteLabel").text(e);
            $("#imgSpeaker2").attr("style", "display: inline-block;");
            showDivNoteLabel(3, !0);
            stpe.includes(7) && (u = $("#au-reSentence").is(":checked") || $("#rSentence").is(":checked") || $("#repeatText").is(":checked"),
            u ? $("#sentences").removeClass("d-none") : $("#sentences").addClass("d-none"))
        } else
            $("#sfrt").addClass("d-none"),
            t.attr("style", "display: none;"),
            $("#rTextLabel").text(""),
            $("#rNoteLabel").text(""),
            $("#imgSpeaker2").attr("style", "display: none;"),
            showDivNoteLabel(3, !1),
            stpe.includes(7) && $("#sentences").addClass("d-none")
}
function rediTest() {
    var n = $("#selectedLv").val()
      , t = $("#selectedLng").val()
      , i = $(`#user-group`).val();
    rediDoEx(n, t, i)
}
function flashCard(n) {
    var t = [], i, r;
    $(".wh21:checked").each(function() {
        t.push($(this).attr("dtIndex"))
    });
    i = $("#acc").val();
    t.length > 0 ? (r = t.join("-"),
    rediSelectFlashCard(i, r, n)) : rediFlashCard(i, n)
}
function repeatSentence(n, t, i) {
    var r, u;
    repeatInterval && clearInterval(repeatInterval);
    n.checked ? ($("#repeatText").prop("checked", !1),
    $("#repeatSpeak").prop("checked", !1),
    $(`#${i}`).prop("checked", !1),
    repeatInterval = setInterval(function() {
        var s, c, f, r, l, a, e, v, y;
        if (!responsiveVoice.isPlaying()) {
            if (t == 1) {
                var o = $("#selectedLv").val()
                  , p = $("#selectedLng").val()
                  , n = [];
                n = o == 12 ? [...tempList].filter(n=>n.isContext == !0) : [...tempList].filter(n=>n.levelId == o && n.lngId == p);
                s = $("#sort").is(":checked");
                s ? (currText = n[currIndex],
                currIndex < n.length - 1 ? currIndex += 1 : currIndex = 0) : (n = getRandomElements(n, 1),
                currText = n[0])
            }
            var i = currText.textValue.replaceAll('"', "").replaceAll("{", "").replaceAll("}", "").replaceAll("[", "").replaceAll("]", "").replaceAll(";", "").replaceAll("-", "").replaceAll("?", "").replaceAll("!", "").replaceAll(/\s\s+/g, " ").replaceAll("\n", " ").split(" ")
              , h = 1
              , u = $("#difficulty").val();
            u > 0 && (c = i.length,
            h = Math.round(c * u / 100));
            f = getRandomValuesAndIndices(i, h);
            const w = f.map(n=>n.value)
              , k = f.map(n=>n.index)
              , d = getLongestWord(w)
              , g = /^[0-9]/;
            for (let n = 0; n < w.length; n++)
                g.test(w[n]) || (w[n] = w[n].replaceAll(".", "").replaceAll(":", "").replaceAll(",", ""));
            const nt = w.join(" ")
              , b = document.getElementById("rText")
              , tt = b.parentElement
              , it = tt.offsetWidth
              , rt = it / 100;
            b.style.fontSize = `calc(12px + (${rt}px * 20) - ${d.length * 3}px)`;
            b.innerHTML = nt;
            r = "black";
            r = u == 20 ? "blue" : u == 50 ? "purple" : "darkgreen";
            k.forEach(n=>{
                const t = `<span style="color: ${r};">${"_".repeat(i[n].length)}</span>`;
                i[n] = t
            }
            );
            l = i.join(" ");
            a = currText.note;
            $("#rTextLabel").html(l);
            $("#rNoteLabel").text(a);
            $("#imgSpeaker2").attr("style", "display: inline-block;");
            showDivNoteLabel(3, !0);
            e = lng.find(n=>n.id == currText.lngId);
            e && (v = e.language,
            y = setupVoice(v),
            responsiveVoice.speak(currText.textValue, y))
        }
    }, 4e3)) : (r = $(`#${i}`).is(":checked"),
    r || (u = document.getElementById("repeatText"),
    $("#repeatText").prop("checked", !0),
    toggleRepeat(1, u)))
}
function getRandomValuesAndIndices(n, t) {
    const i = [];
    while (i.length < t) {
        const t = Math.floor(Math.random() * n.length)
          , r = n[t];
        i.some(n=>n.index == t) || i.push({
            index: t,
            value: r
        })
    }
    return i.sort((n,t)=>n.index - t.index),
    i
}
function toggleSelect(n) {
    var t = document.querySelector(`#${n}-custom-select`);
    t.classList.toggle("open")
}
function shareToGroup(n) {
    var r = document.querySelectorAll(`#share-custom-select .options input[type="checkbox"]:checked`)
      , i = Array.from(r).map(function(n) {
        return n.value
    })
      , t = $("#notifyShare");
    if (t.text(""),
    i.length == 0) {
        t.text("Vui lòng chọn nhóm để chia sẻ").attr("style", "color: red !important;");
        return
    }
    const u = {
        fileIndex: fidToShare,
        gids: JSON.stringify(i),
        t: n
    };
    $("#loadingOverlay").addClass("d-flex");
    $("#btnShare").prop("disabled", !0);
    $("#btnRevokeShare").prop("disabled", !0);
    $.ajax({
        method: "POST",
        url: "/add-file-to-grp",
        headers: {
            Authorization: "Bearer " + token
        },
        data: u
    }).done(function(n) {
        $("#loadingOverlay").removeClass("d-flex");
        t.text("Ok.").attr("style", "color: blue !important;");
        $("#btnShare").prop("disabled", !1);
        $("#btnRevokeShare").prop("disabled", !1);
        grouptexts = n.groupTexts;
        var i = $(`#user-group`).val();
        i != 0 && processFile()
    }).fail(function(n) {
        console.log(n);
        $("#loadingOverlay").removeClass("d-flex");
        n.status == 401 && rediLogin();
        t.text(n.responseJSON).attr("style", "color: red !important;");
        setTimeout(function() {
            $("#btnShare").prop("disabled", !1);
            $("#btnRevokeShare").prop("disabled", !1)
        }, 3e3)
    })
}
function sh(n, t, i) {
    t == !1 ? toggleModal("modalDocs") : i > -1 && apiGF("", -1, n, !1);
    $("#audio-docs").hide();
    $("#docs-docs").hide();
    $("#image-docs").hide();
    $("#video-docs").hide();
    $(`#${n}-docs`).show();
    $("#title-docs").html(n);
    n != "audio" && pauseDocAudio()
}
function clsh() {
    toggleModal("modalDocs");
    pauseDocAudio()
}
function pauseDocAudio() {
    da.pause();
    da.currentTime = 0;
    da.src = ""
}
function docAudio(n) {
    var t = $(n).attr("dt1");
    da.src = t;
    da.play();
    $(".doc-wrap").each(function() {
        $(this).attr("style", "")
    });
    $(n).attr("style", "color: red;font-weight: bold;")
}
function closeMyVid() {
    var n = $("#vidSrc")
      , t = n.parent()[0];
    t.pause();
    toggleModal("myvid")
}
function cfshIoV(n) {
    var r = $(n).attr("dt1"), u = $(n).attr("dt2"), t, i;
    $(`#${u}`).show();
    t = $("#cf-vidSrc");
    t.attr("src", r);
    i = t.parent()[0];
    i.load();
    i.play();
    $(".doc-wrap").each(function() {
        $(this).attr("style", "")
    });
    $(n).attr("style", "color: red;font-weight: bold;")
}
function closeCfMyVid() {
    var n = $("#cf-vidSrc")
      , t = n.parent()[0];
    t.pause();
    toggleModal("cf-myvid")
}
function shIoV(n) {
    var r = $(n).attr("dt1"), u = $(n).attr("dt2"), t, i;
    $("#myvid").hide();
    $("#myimg").hide();
    $(`#${u}`).show();
    u == "myvid" ? (t = $("#vidSrc"),
    t.attr("src", r),
    i = t.parent()[0],
    i.load(),
    i.play()) : $("#imgSrc").attr("src", r);
    $(".doc-wrap").each(function() {
        $(this).attr("style", "")
    });
    $(n).attr("style", "color: red;font-weight: bold;")
}
function gf(n, t) {
    var i = $(n).attr("dt1"), f = $(n).attr("dt2"), r = i.split("/"), u;
    if (r.length > 1 && r[1] == "documents")
        u = $(n).attr("dt3"),
        apiGF(i, f, u, t);
    else
        return
}
function apiGF(n, t, i, r) {
    pauseDocAudio();
    const u = {
        fp: n,
        type: t,
        b: r
    };
    $("#loadingOverlay").addClass("d-flex");
    $.ajax({
        method: "POST",
        url: "/gase",
        headers: {
            Authorization: "Bearer " + token
        },
        data: u
    }).done(function(n) {
        $("#loadingOverlay").removeClass("d-flex");
        $("#f-docs").html(n);
        sh(i, !0, -1)
    }).fail(function(n) {
        console.log(n);
        $("#loadingOverlay").removeClass("d-flex");
        n.status == 401 && rediLogin()
    })
}
function fdictionary() {
    var n, i, t;
    if (!stpe.includes(13)) {
        n.text("Bạn không có quyền sử dụng từ điển").attr("style", "color: red !important");
        return
    }
    if (n = $("#noti-fxdictionary"),
    n.text(""),
    i = $("#f-dictionary").val(),
    i.trim().length == 0) {
        n.text("").attr("style", "color: red !important");
        return
    }
    t = $("#f-dictionary-btn");
    $("#loadingOverlay").addClass("d-flex");
    t.prop("disabled", !0);
    $.ajax({
        method: "GET",
        url: `/dictionary/${i}`,
        headers: {
            Authorization: "Bearer " + token
        }
    }).done(function(i) {
        $("#loadingOverlay").removeClass("d-flex");
        t.prop("disabled", !1);
        n.text("");
        $("#f-info").html(i.info);
        $("#f-example").html(i.example);
        var r = $("<img>", {
            src: "/images/forward.png",
            "class": "forward-btn"
        });
        r.on("click", function() {
            var n = $(".rLst.rLstGt")
              , t = n.find("li").map(function() {
                return $(this).text().trim()
            }).get()
              , i = t.join("\n");
            $("#text").val(i);
            toggleModal("dictionaryModal")
        });
        $("#f-example div.rClear").after(r);
        $("#f-options").html(i.options);
        $("a[id]").removeAttr("onclick");
        $("a[id]").on("click", function(n) {
            dicAudio.pause();
            dicAudio.currentTime = 0;
            n.preventDefault();
            var t = `/dictionaryMp3/${$(this).attr("href")}`;
            dicAudio.src = t;
            dicAudio.play()
        })
    }).fail(function(i) {
        n.html(i.responseJSON).attr("style", "color: red !important");
        $("#loadingOverlay").removeClass("d-flex");
        i.status == 401 && rediLogin();
        setTimeout(function() {
            t.prop("disabled", !1)
        }, 3e3)
    })
}
function backFile() {
    createFileListHtml(tempList)
}
function shKb(n) {
    $(`#${n}`).toggle()
}
function kbdictionary(n) {
    var t = $("#f-dictionary").val()
      , i = $(n).text()
      , r = `${t}${i}`;
    $("#f-dictionary").val(r)
}
function kbclick(n) {
    if (taActiveEl) {
        var t = $(n).text()
          , i = $(taActiveEl).val();
        $(taActiveEl).val(i + t)
    }
}
function checkAndCallApi() {
    const n = {
        a: $("#acc").val()
    };
    $.ajax({
        method: "POST",
        url: "/g-ufr-context",
        headers: {
            Authorization: "Bearer " + token
        },
        data: n
    }).done(function(n) {
        var t = texts.find(n=>n.isContext == !0), i, r, u;
        if (t && (i = n.texts[0],
        t.index != i.index && (texts = texts.filter(n=>n.isContext == !1),
        texts = [...texts, ...n.texts],
        r = $("#selectedLv").val(),
        r == 12))) {
            const n = $("#search").val().trim();
            n.length == 0 ? processFile() : handleDebouncedSearch();
            u = $('input[type="checkbox"][name="selectAll"]');
            u.prop("checked", !1)
        }
    }).fail(function(n) {
        console.log(n);
        $("#loadingOverlay").removeClass("d-flex");
        n.status == 401 && rediLogin()
    })
}
var lv = [], lng = [], texts = [], grouptexts = [], token = $("#uto").val(), stpe = [], taActiveEl, nameOfFile, audio, isExpanded, searchTimer, actionData, da, dicAudio;
$(document).ready(function() {
    loadData();
    setInterval(checkAndCallApi, 6e4);
    $("textarea[id]").on("focus", function() {
        taActiveEl = this
    })
});
nameOfFile = "";
let fidToShare = 0
  , tempList = [];
audio = new Audio;
audio.addEventListener("ended", function() {
    setTimeout(randomSelectedAudio, 2e3)
});
isExpanded = !0;
actionData = null;
let repeatInterval;
let currText, currIndex = 0;
let sfrt = !1;
da = new Audio;
dicAudio = new Audio;


// SUB MENU OPEN
// function openSubmenu() {
//     $('.menu-items').attr('display','flex')
//     $('#userfile').addClass('d-none')
// }
// $('#sm-input').on('click', function() {
//     openSubmenu()
//     console.log(1);
// })
$('#hp-icon').click(function() {
   
})